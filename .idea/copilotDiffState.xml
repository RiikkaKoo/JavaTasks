<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Moduuli4.0/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Moduuli4.0/README.md" />
              <option name="originalContent" value="### THE CALCULATOR PROGRAM&#10;The calculator program lets the user add positive integers together. &#10;The user can also reset the total to zero, look at the current total, &#10;or exit the program. This file shows the code for the program and explains how it works.&#10;&#10;Here is the code for the calculator program:&#10;&#10;`&#10;&#10;´´´java&#10;import java.util.Scanner;&#10;&#10;public class Calculator {&#10;private int currentValue;&#10;&#10;    // Method that adds two positive integers to a current value&#10;    public void add(int value) {&#10;        if (value &lt; 0) {&#10;            throw new IllegalArgumentException(&quot;Only positive integers are allowed.&quot;);&#10;        }&#10;        currentValue += value;&#10;    }&#10;&#10;    // Method that resets the current value to zero&#10;    public void reset() {&#10;        currentValue = 0;&#10;    }&#10;&#10;    // Method that returns the current value&#10;    public int getCurrentValue() {&#10;        return currentValue;&#10;    }&#10;&#10;    // Main method: lets user add positive integers, reset the value, and get the current value&#10;    public static void main(String[] args) {&#10;        Calculator calc = new Calculator();&#10;        Scanner scanner = new Scanner(System.in);&#10;        boolean running = true;&#10;&#10;        while (running) {&#10;            System.out.println(&quot;\nChoose an option:&quot;);&#10;            System.out.println(&quot;1. Add a positive integer&quot;);&#10;            System.out.println(&quot;2. Reset value&quot;);&#10;            System.out.println(&quot;3. Show current value&quot;);&#10;            System.out.println(&quot;4. Exit&quot;);&#10;            System.out.print(&quot;Your choice: &quot;);&#10;            int choice = scanner.nextInt();&#10;&#10;            switch (choice) {&#10;                case 1:&#10;                    System.out.print(&quot;Enter a positive integer to add: &quot;);&#10;                    int value = scanner.nextInt();&#10;                    try {&#10;                        calc.add(value);&#10;                        System.out.println(&quot;Added &quot; + value + &quot;.&quot;);&#10;                    } catch (IllegalArgumentException e) {&#10;                        System.out.println(e.getMessage());&#10;                    }&#10;                    break;&#10;                case 2:&#10;                    calc.reset();&#10;                    System.out.println(&quot;Value reset.&quot;);&#10;                    break;&#10;                case 3:&#10;                    System.out.println(&quot;Current value: &quot; + calc.getCurrentValue());&#10;                    break;&#10;                case 4:&#10;                    running = false;&#10;                    System.out.println(&quot;Exiting.&quot;);&#10;                    break;&#10;                default:&#10;                    System.out.println(&quot;Invalid choice.&quot;);&#10;            }&#10;        }&#10;        scanner.close();&#10;    }&#10;}&#10;´´´&#10;### How the Code Works:&#10;&#10;The calculator program is a simple Java application that allows the user to add positive integer values together. &#10;The main features are:&#10;&#10;- **Adding Positive Integers (`add(int value)`):**  &#10;  This method takes a positive integer as input and adds it to the calculator's current total.  &#10;  If the input value is negative, the method throws an `IllegalArgumentException` and the program displays an error message.  &#10;  This ensures only positive values are added.&#10;&#10;- **Resetting the Value (`reset()`):**  &#10;  This method sets the calculator's current total back to zero.  &#10;  It can be used at any time to clear the accumulated value.&#10;&#10;- **Viewing the Current Value (`getCurrentValue()`):**  &#10;  This method returns the current total stored in the calculator.  &#10;  The user can use this option to see the result of their additions or after a reset.&#10;&#10;- **Exiting the Program:**  &#10;  The user can exit the program from the menu.&#10;&#10;The program uses a loop to repeatedly show a menu and process the user's choice. &#10;Input is handled using a `Scanner`. The logic for adding, resetting, and getting &#10;the current value is encapsulated in the `Calculator` class.&#10;" />
              <option name="updatedContent" value="### THE CALCULATOR PROGRAM&#10;The calculator program lets the user add positive integers together. &#10;The user can also reset the total to zero, look at the current total, &#10;or exit the program. This file shows the code for the program and explains how it works.&#10;&#10;Here is the code for the calculator program:&#10;&#10;`&#10;&#10;´´´java&#10;import java.util.Scanner;&#10;&#10;public class Calculator {&#10;private int currentValue;&#10;&#10;    // Method that adds two positive integers to a current value&#10;    public void add(int value) {&#10;        if (value &lt; 0) {&#10;            throw new IllegalArgumentException(&quot;Only positive integers are allowed.&quot;);&#10;        }&#10;        currentValue += value;&#10;    }&#10;&#10;    // Method that resets the current value to zero&#10;    public void reset() {&#10;        currentValue = 0;&#10;    }&#10;&#10;    // Method that returns the current value&#10;    public int getCurrentValue() {&#10;        return currentValue;&#10;    }&#10;&#10;    // Main method: lets user add positive integers, reset the value, and get the current value&#10;    public static void main(String[] args) {&#10;        Calculator calc = new Calculator();&#10;        Scanner scanner = new Scanner(System.in);&#10;        boolean running = true;&#10;&#10;        while (running) {&#10;            System.out.println(&quot;\nChoose an option:&quot;);&#10;            System.out.println(&quot;1. Add a positive integer&quot;);&#10;            System.out.println(&quot;2. Reset value&quot;);&#10;            System.out.println(&quot;3. Show current value&quot;);&#10;            System.out.println(&quot;4. Exit&quot;);&#10;            System.out.print(&quot;Your choice: &quot;);&#10;            int choice = scanner.nextInt();&#10;&#10;            switch (choice) {&#10;                case 1:&#10;                    System.out.print(&quot;Enter a positive integer to add: &quot;);&#10;                    int value = scanner.nextInt();&#10;                    try {&#10;                        calc.add(value);&#10;                        System.out.println(&quot;Added &quot; + value + &quot;.&quot;);&#10;                    } catch (IllegalArgumentException e) {&#10;                        System.out.println(e.getMessage());&#10;                    }&#10;                    break;&#10;                case 2:&#10;                    calc.reset();&#10;                    System.out.println(&quot;Value reset.&quot;);&#10;                    break;&#10;                case 3:&#10;                    System.out.println(&quot;Current value: &quot; + calc.getCurrentValue());&#10;                    break;&#10;                case 4:&#10;                    running = false;&#10;                    System.out.println(&quot;Exiting.&quot;);&#10;                    break;&#10;                default:&#10;                    System.out.println(&quot;Invalid choice.&quot;);&#10;            }&#10;        }&#10;        scanner.close();&#10;    }&#10;}&#10;´´´&#10;### How the Code Works:&#10;&#10;The calculator program is a simple Java application that allows the user to add positive integer values together. &#10;The main features are:&#10;&#10;- **Adding Positive Integers (`add(int value)`):**  &#10;  This method takes a positive integer as input and adds it to the calculator's current total.  &#10;  If the input value is negative, the method throws an `IllegalArgumentException` and the program displays an error message.  &#10;  This ensures only positive values are added.&#10;&#10;- **Resetting the Value (`reset()`):**  &#10;  This method sets the calculator's current total back to zero.  &#10;  It can be used at any time to clear the accumulated value.&#10;&#10;- **Viewing the Current Value (`getCurrentValue()`):**  &#10;  This method returns the current total stored in the calculator.  &#10;  The user can use this option to see the result of their additions or after a reset.&#10;&#10;- **Exiting the Program:**  &#10;  The user can exit the program from the menu.&#10;&#10;The program uses a loop to repeatedly show a menu and process the user's choice. &#10;Input is handled using a `Scanner`. The logic for adding, resetting, and getting &#10;the current value is encapsulated in the `Calculator` class." />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Moduuli4.0/src/Calculator.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Moduuli4.0/src/Calculator.java" />
              <option name="originalContent" value="import java.util.Scanner;&#10;&#10;public class Calculator {&#10;    private int currentValue;&#10;&#10;    // Method that adds two positive integers to a current value&#10;    public void add(int value) {&#10;        if (value &lt; 0) {&#10;            throw new IllegalArgumentException(&quot;Only positive integers are allowed.&quot;);&#10;        }&#10;        currentValue += value;&#10;    }&#10;&#10;    // Method that resets the current value to zero&#10;    public void reset() {&#10;        currentValue = 0;&#10;    }&#10;&#10;    // Method that returns the current value&#10;    public int getCurrentValue() {&#10;        return currentValue;&#10;    }&#10;&#10;    // Main method: lets user add positive integers, reset the value, and get the current value&#10;    public static void main(String[] args) {&#10;        Calculator calc = new Calculator();&#10;        Scanner scanner = new Scanner(System.in);&#10;        boolean running = true;&#10;&#10;        while (running) {&#10;            System.out.println(&quot;\nChoose an option:&quot;);&#10;            System.out.println(&quot;1. Add a positive integer&quot;);&#10;            System.out.println(&quot;2. Reset value&quot;);&#10;            System.out.println(&quot;3. Show current value&quot;);&#10;            System.out.println(&quot;4. Exit&quot;);&#10;            System.out.print(&quot;Your choice: &quot;);&#10;            int choice = scanner.nextInt();&#10;&#10;            switch (choice) {&#10;                case 1:&#10;                    System.out.print(&quot;Enter a positive integer to add: &quot;);&#10;                    int value = scanner.nextInt();&#10;                    try {&#10;                        calc.add(value);&#10;                        System.out.println(&quot;Added &quot; + value + &quot;.&quot;);&#10;                    } catch (IllegalArgumentException e) {&#10;                        System.out.println(e.getMessage());&#10;                    }&#10;                    break;&#10;                case 2:&#10;                    calc.reset();&#10;                    System.out.println(&quot;Value reset.&quot;);&#10;                    break;&#10;                case 3:&#10;                    System.out.println(&quot;Current value: &quot; + calc.getCurrentValue());&#10;                    break;&#10;                case 4:&#10;                    running = false;&#10;                    System.out.println(&quot;Exiting.&quot;);&#10;                    break;&#10;                default:&#10;                    System.out.println(&quot;Invalid choice.&quot;);&#10;            }&#10;        }&#10;        scanner.close();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="import java.util.Scanner;&#10;&#10;public class Calculator {&#10;    private int currentValue;&#10;&#10;    /**&#10;     * Adds a positive integer to the current value.&#10;     * If the input value is negative, throws an IllegalArgumentException.&#10;     *&#10;     * @param value the positive integer to add&#10;     * @throws IllegalArgumentException if value is negative&#10;     */&#10;    public void add(int value) {&#10;        if (value &lt; 0) {&#10;            throw new IllegalArgumentException(&quot;Only positive integers are allowed.&quot;);&#10;        }&#10;        currentValue += value;&#10;    }&#10;&#10;    /**&#10;     * Resets the current value to zero.&#10;     * This method can be used to clear the calculator's total.&#10;     */&#10;    public void reset() {&#10;        currentValue = 0;&#10;    }&#10;&#10;    /**&#10;     * Returns the current value stored in the calculator.&#10;     *&#10;     * @return the current total value&#10;     */&#10;    public int getCurrentValue() {&#10;        return currentValue;&#10;    }&#10;&#10;    // Main method: lets user add positive integers, reset the value, and get the current value&#10;    public static void main(String[] args) {&#10;        Calculator calc = new Calculator();&#10;        Scanner scanner = new Scanner(System.in);&#10;        boolean running = true;&#10;&#10;        while (running) {&#10;            System.out.println(&quot;\nChoose an option:&quot;);&#10;            System.out.println(&quot;1. Add a positive integer&quot;);&#10;            System.out.println(&quot;2. Reset value&quot;);&#10;            System.out.println(&quot;3. Show current value&quot;);&#10;            System.out.println(&quot;4. Exit&quot;);&#10;            System.out.print(&quot;Your choice: &quot;);&#10;            int choice = scanner.nextInt();&#10;&#10;            switch (choice) {&#10;                case 1:&#10;                    System.out.print(&quot;Enter a positive integer to add: &quot;);&#10;                    int value = scanner.nextInt();&#10;                    try {&#10;                        calc.add(value);&#10;                        System.out.println(&quot;Added &quot; + value + &quot;.&quot;);&#10;                    } catch (IllegalArgumentException e) {&#10;                        System.out.println(e.getMessage());&#10;                    }&#10;                    break;&#10;                case 2:&#10;                    calc.reset();&#10;                    System.out.println(&quot;Value reset.&quot;);&#10;                    break;&#10;                case 3:&#10;                    System.out.println(&quot;Current value: &quot; + calc.getCurrentValue());&#10;                    break;&#10;                case 4:&#10;                    running = false;&#10;                    System.out.println(&quot;Exiting.&quot;);&#10;                    break;&#10;                default:&#10;                    System.out.println(&quot;Invalid choice.&quot;);&#10;            }&#10;        }&#10;        scanner.close();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>